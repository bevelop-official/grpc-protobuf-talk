/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var entities_pb = require('./entities_pb.js');
goog.object.extend(proto, entities_pb);
goog.exportSymbol('proto.bev.bookstore.v1.GetAuthorRequest', null, global);
goog.exportSymbol('proto.bev.bookstore.v1.GetAuthorResponse', null, global);
goog.exportSymbol('proto.bev.bookstore.v1.ListAuthorsRequest', null, global);
goog.exportSymbol('proto.bev.bookstore.v1.ListAuthorsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bev.bookstore.v1.ListAuthorsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bev.bookstore.v1.ListAuthorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bev.bookstore.v1.ListAuthorsRequest.displayName = 'proto.bev.bookstore.v1.ListAuthorsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bev.bookstore.v1.ListAuthorsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bev.bookstore.v1.ListAuthorsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bev.bookstore.v1.ListAuthorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.ListAuthorsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bev.bookstore.v1.ListAuthorsRequest}
 */
proto.bev.bookstore.v1.ListAuthorsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bev.bookstore.v1.ListAuthorsRequest;
  return proto.bev.bookstore.v1.ListAuthorsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bev.bookstore.v1.ListAuthorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bev.bookstore.v1.ListAuthorsRequest}
 */
proto.bev.bookstore.v1.ListAuthorsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bev.bookstore.v1.ListAuthorsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bev.bookstore.v1.ListAuthorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bev.bookstore.v1.ListAuthorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.ListAuthorsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bev.bookstore.v1.ListAuthorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bev.bookstore.v1.ListAuthorsResponse.repeatedFields_, null);
};
goog.inherits(proto.bev.bookstore.v1.ListAuthorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bev.bookstore.v1.ListAuthorsResponse.displayName = 'proto.bev.bookstore.v1.ListAuthorsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bev.bookstore.v1.ListAuthorsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bev.bookstore.v1.ListAuthorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bev.bookstore.v1.ListAuthorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bev.bookstore.v1.ListAuthorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.ListAuthorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorsList: jspb.Message.toObjectList(msg.getAuthorsList(),
    entities_pb.Author.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bev.bookstore.v1.ListAuthorsResponse}
 */
proto.bev.bookstore.v1.ListAuthorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bev.bookstore.v1.ListAuthorsResponse;
  return proto.bev.bookstore.v1.ListAuthorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bev.bookstore.v1.ListAuthorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bev.bookstore.v1.ListAuthorsResponse}
 */
proto.bev.bookstore.v1.ListAuthorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new entities_pb.Author;
      reader.readMessage(value,entities_pb.Author.deserializeBinaryFromReader);
      msg.addAuthors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bev.bookstore.v1.ListAuthorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bev.bookstore.v1.ListAuthorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bev.bookstore.v1.ListAuthorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.ListAuthorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      entities_pb.Author.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Author authors = 1;
 * @return {!Array<!proto.bev.bookstore.v1.Author>}
 */
proto.bev.bookstore.v1.ListAuthorsResponse.prototype.getAuthorsList = function() {
  return /** @type{!Array<!proto.bev.bookstore.v1.Author>} */ (
    jspb.Message.getRepeatedWrapperField(this, entities_pb.Author, 1));
};


/** @param {!Array<!proto.bev.bookstore.v1.Author>} value */
proto.bev.bookstore.v1.ListAuthorsResponse.prototype.setAuthorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bev.bookstore.v1.Author=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bev.bookstore.v1.Author}
 */
proto.bev.bookstore.v1.ListAuthorsResponse.prototype.addAuthors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bev.bookstore.v1.Author, opt_index);
};


proto.bev.bookstore.v1.ListAuthorsResponse.prototype.clearAuthorsList = function() {
  this.setAuthorsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bev.bookstore.v1.GetAuthorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bev.bookstore.v1.GetAuthorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bev.bookstore.v1.GetAuthorRequest.displayName = 'proto.bev.bookstore.v1.GetAuthorRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bev.bookstore.v1.GetAuthorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bev.bookstore.v1.GetAuthorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bev.bookstore.v1.GetAuthorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.GetAuthorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorUid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bev.bookstore.v1.GetAuthorRequest}
 */
proto.bev.bookstore.v1.GetAuthorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bev.bookstore.v1.GetAuthorRequest;
  return proto.bev.bookstore.v1.GetAuthorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bev.bookstore.v1.GetAuthorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bev.bookstore.v1.GetAuthorRequest}
 */
proto.bev.bookstore.v1.GetAuthorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bev.bookstore.v1.GetAuthorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bev.bookstore.v1.GetAuthorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bev.bookstore.v1.GetAuthorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.GetAuthorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string author_uid = 1;
 * @return {string}
 */
proto.bev.bookstore.v1.GetAuthorRequest.prototype.getAuthorUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.bev.bookstore.v1.GetAuthorRequest.prototype.setAuthorUid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bev.bookstore.v1.GetAuthorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bev.bookstore.v1.GetAuthorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bev.bookstore.v1.GetAuthorResponse.displayName = 'proto.bev.bookstore.v1.GetAuthorResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bev.bookstore.v1.GetAuthorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bev.bookstore.v1.GetAuthorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bev.bookstore.v1.GetAuthorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.GetAuthorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    author: (f = msg.getAuthor()) && entities_pb.Author.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bev.bookstore.v1.GetAuthorResponse}
 */
proto.bev.bookstore.v1.GetAuthorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bev.bookstore.v1.GetAuthorResponse;
  return proto.bev.bookstore.v1.GetAuthorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bev.bookstore.v1.GetAuthorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bev.bookstore.v1.GetAuthorResponse}
 */
proto.bev.bookstore.v1.GetAuthorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new entities_pb.Author;
      reader.readMessage(value,entities_pb.Author.deserializeBinaryFromReader);
      msg.setAuthor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bev.bookstore.v1.GetAuthorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bev.bookstore.v1.GetAuthorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bev.bookstore.v1.GetAuthorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bev.bookstore.v1.GetAuthorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      entities_pb.Author.serializeBinaryToWriter
    );
  }
};


/**
 * optional Author author = 1;
 * @return {?proto.bev.bookstore.v1.Author}
 */
proto.bev.bookstore.v1.GetAuthorResponse.prototype.getAuthor = function() {
  return /** @type{?proto.bev.bookstore.v1.Author} */ (
    jspb.Message.getWrapperField(this, entities_pb.Author, 1));
};


/** @param {?proto.bev.bookstore.v1.Author|undefined} value */
proto.bev.bookstore.v1.GetAuthorResponse.prototype.setAuthor = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.bev.bookstore.v1.GetAuthorResponse.prototype.clearAuthor = function() {
  this.setAuthor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bev.bookstore.v1.GetAuthorResponse.prototype.hasAuthor = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.bev.bookstore.v1);
